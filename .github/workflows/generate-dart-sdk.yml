name: Generate Dart SDK

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  generate-sdk:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout Dart SDK repo
        uses: actions/checkout@v4
        with:
          path: dart_sdk

      - name: ⬇️ Checkout NestJS API repo
        uses: actions/checkout@v4
        with:
          repository: joicodev/orion_gem_nest_api
          path: backend

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: 🚀 Run NestJS API in background
        working-directory: backend
        run: |
          npm run start:dev &
          echo "⏳ Waiting for API to be ready..."
          for i in {1..30}; do
            if curl -s http://localhost:3000/api-json > /dev/null; then
              echo "✅ API is up!"
              break
            fi
            sleep 2
          done

      - name: 💾 Extract version from pubspec.yaml or default
        id: get_version
        working-directory: dart_sdk
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f2 || echo "1.0.0")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: 🧹 Clean old SDK files
        working-directory: dart_sdk
        run: rm -rf lib doc test pubspec.yaml .openapi-generator .openapi-generator-ignore

      - name: ⚙️ Generate Dart SDK
        working-directory: dart_sdk
        run: |
          npm install -g @openapitools/openapi-generator-cli
          openapi-generator-cli generate \
            -g dart-dio \
            -i http://localhost:3000/api-json \
            -o . \
            --additional-properties=pubName=orion_gem_dart_client,pubVersion=${{ steps.get_version.outputs.version }},serializationLibrary=built_value,buildRunner=true,useEnumExtension=true

      - name: 🛠️ Run build_runner
        working-directory: dart_sdk
        run: |
          dart pub get
          dart run build_runner build --delete-conflicting-outputs

      - name: 🆕 Create SDK branch
        working-directory: dart_sdk
        run: |
          git config user.name "GitHub Action"
          git config user.email "actions@github.com"
          git checkout -b auto/sdk-update-${{ steps.get_version.outputs.version }}
          git add .
          git commit -m "🔄 Auto SDK update (v${{ steps.get_version.outputs.version }})"
          git push origin auto/sdk-update-${{ steps.get_version.outputs.version }}

      - name: 🚀 Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: dart_sdk
          commit-message: "🔄 Auto SDK update (v${{ steps.get_version.outputs.version }})"
          branch: auto/sdk-update-${{ steps.get_version.outputs.version }}
          title: "SDK: Auto-generated update (v${{ steps.get_version.outputs.version }})"
          body: |
            This PR contains the auto-generated Dart client for Orion GEM API.
            Version: `${{ steps.get_version.outputs.version }}`
          labels: sdk, auto-generated
          base: main

      - name: 🏷️ Create tag
        working-directory: dart_sdk
        run: |
          git tag v${{ steps.get_version.outputs.version }}
          git push origin v${{ steps.get_version.outputs.version }}
