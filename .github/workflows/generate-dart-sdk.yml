name: Generate Dart SDK on Merge to Develop

on:
  push:
    branches:
      - develop

jobs:
  generate-client:
    runs-on: ubuntu-latest

    env:
      CLIENT_REPO: joicodev/orion_gem_dart_client
      CLIENT_BRANCH: auto/sdk-update
      SDK_OUTPUT_DIR: sdk-output
      SWAGGER_URL: http://localhost:3000/api-json

    steps:
      - name: Checkout backend repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install openapi-generator-cli
        run: npm install @openapitools/openapi-generator-cli -g

      - name: Start NestJS app (for Swagger)
        run: |
          npm install
          npm run build &
          npm run start:dev &
          sleep 10  # Espera a que inicie

      - name: Generate SDK to temp folder
        run: |
          mkdir ${{ env.SDK_OUTPUT_DIR }}
          openapi-generator-cli generate \
            -g dart-dio \
            -i ${{ env.SWAGGER_URL }} \
            -o ${{ env.SDK_OUTPUT_DIR }} \
            --additional-properties=pubName=orion_gem_dart_client,pubVersion=1.0.0,serializationLibrary=built_value,buildRunner=true,useEnumExtension=true

      - name: Checkout Dart client repo
        uses: actions/checkout@v3
        with:
          repository: ${{ env.CLIENT_REPO }}
          token: ${{ secrets.GH_TOKEN }}
          path: dart_client

      - name: Copy generated SDK
        run: |
          rm -rf dart_client/lib dart_client/test dart_client/doc
          cp -r ${{ env.SDK_OUTPUT_DIR }}/lib dart_client/
          cp -r ${{ env.SDK_OUTPUT_DIR }}/test dart_client/
          cp -r ${{ env.SDK_OUTPUT_DIR }}/doc dart_client/
          cp ${{ env.SDK_OUTPUT_DIR }}/pubspec.yaml dart_client/

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1

      - name: Install Dart dependencies and run build_runner
        working-directory: dart_client
        run: |
          dart pub get
          dart run build_runner build --delete-conflicting-outputs

      - name: Create new branch and commit
        working-directory: dart_client
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git checkout -b ${{ env.CLIENT_BRANCH }}
          git add .
          git commit -m "ðŸ¤– Auto-generated SDK update from backend changes"
          git push origin ${{ env.CLIENT_BRANCH }} --force

      - name: Create Pull Request to main
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_TOKEN }}
          path: dart_client
          commit-message: "Auto-generated Dart SDK update"
          title: "Auto SDK Update from backend develop"
          body: "This PR includes updated Dart SDK generated from the latest changes merged into develop."
          branch: ${{ env.CLIENT_BRANCH }}
          base: main
